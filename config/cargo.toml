# 一些好用的 alias
[alias]
b = "build --release"
c = "check"
t = "test -- --nocapture"
r = "run"
u = "update"
f = "clippy --fix --all-targets --all-features --allow-staged --allow-dirty"
i = "install --profile installation"
bi = "binstall -y"

# 使用 sccache 缓存编译结果（需要安装 sccache）
[build]
# rustc-wrapper = "sccache" # use env instead of this
# rustflags = "-Z checksum-freshness"

[unstable]
checksum-freshness = true
# codegen-backend = true

# 使用 cargo install 使用的命令
[profile.installation]
lto = true
inherits = "release"
codegen-units = 1
rustflags = ["-C", "target-cpu=native"]

[profile.dev]
# rustup component add rustc-codegen-cranelift-preview --toolchain nightly-2024-10-15-x86_64-unknown-linux-gnu
# codegen-backend = "cranelift"
debug = "line-tables-only"

[profile.dev.package."*"]
debug = false

[profile.debugging]
inherits = "dev"
debug = true

[profile.release]
panic = "abort"
opt-level = "s"

[net]
git-fetch-with-cli = true

# [target.x86_64-pc-windows-msvc]
# rustflags = ["-C", "link-arg=-fuse-ld=lld"]

# [target.x86_64-pc-windows-gnu]
# rustflags = ["-C", "link-arg=-fuse-ld=lld"]

# [target.x86_64-unknown-linux-gnu]
# rustflags = ["-C", "link-arg=-fuse-ld=lld"]
